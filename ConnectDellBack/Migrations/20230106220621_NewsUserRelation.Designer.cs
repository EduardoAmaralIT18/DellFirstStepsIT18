// <auto-generated />
using System;
using ConnectDellBack.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConnectDellBack.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230106220621_NewsUserRelation")]
    partial class NewsUserRelation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConnectDellBack.Models.EditionModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("curriculum")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("endDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("mode")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("numberOfInterns")
                        .HasColumnType("int");

                    b.Property<int>("numberOfMembers")
                        .HasColumnType("int");

                    b.Property<int>("programid")
                        .HasColumnType("int");

                    b.Property<DateTime>("startDate")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("programid");

                    b.ToTable("editions");
                });

            modelBuilder.Entity("ConnectDellBack.Models.MembershipModel", b =>
                {
                    b.Property<int>("editionid")
                        .HasColumnType("int");

                    b.Property<int>("ownerid")
                        .HasColumnType("int");

                    b.HasKey("editionid", "ownerid");

                    b.HasIndex("ownerid");

                    b.ToTable("MembershipModel");
                });

            modelBuilder.Entity("ConnectDellBack.Models.NewsModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("authorid")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<int>("programid")
                        .HasColumnType("int");

                    b.Property<string>("text")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.HasIndex("authorid");

                    b.HasIndex("programid");

                    b.ToTable("news");
                });

            modelBuilder.Entity("ConnectDellBack.Models.OwnershipModel", b =>
                {
                    b.Property<int>("ownerid")
                        .HasColumnType("int");

                    b.Property<int>("programid")
                        .HasColumnType("int");

                    b.HasKey("ownerid", "programid");

                    b.HasIndex("programid");

                    b.ToTable("OwnershipModel");
                });

            modelBuilder.Entity("ConnectDellBack.Models.PhasesModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("editionid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("endDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("peopleInvolved")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("startDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("editionid");

                    b.ToTable("phases");
                });

            modelBuilder.Entity("ConnectDellBack.Models.ProgramModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("endDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("startDate")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("programs");
                });

            modelBuilder.Entity("ConnectDellBack.Models.UserModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("editionInternid")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("notes")
                        .IsRequired()
                        .HasMaxLength(2500)
                        .HasColumnType("nvarchar(2500)");

                    b.Property<int>("role")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("editionInternid");

                    b.ToTable("users");
                });

            modelBuilder.Entity("ConnectDellBack.Models.EditionModel", b =>
                {
                    b.HasOne("ConnectDellBack.Models.ProgramModel", "program")
                        .WithMany("editions")
                        .HasForeignKey("programid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("program");
                });

            modelBuilder.Entity("ConnectDellBack.Models.MembershipModel", b =>
                {
                    b.HasOne("ConnectDellBack.Models.EditionModel", "edition")
                        .WithMany("memberships")
                        .HasForeignKey("editionid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConnectDellBack.Models.UserModel", "owner")
                        .WithMany("memberships")
                        .HasForeignKey("ownerid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("edition");

                    b.Navigation("owner");
                });

            modelBuilder.Entity("ConnectDellBack.Models.NewsModel", b =>
                {
                    b.HasOne("ConnectDellBack.Models.UserModel", "author")
                        .WithMany("listNews")
                        .HasForeignKey("authorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConnectDellBack.Models.ProgramModel", "program")
                        .WithMany("news")
                        .HasForeignKey("programid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("author");

                    b.Navigation("program");
                });

            modelBuilder.Entity("ConnectDellBack.Models.OwnershipModel", b =>
                {
                    b.HasOne("ConnectDellBack.Models.UserModel", "owner")
                        .WithMany("ownerships")
                        .HasForeignKey("ownerid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConnectDellBack.Models.ProgramModel", "program")
                        .WithMany("ownerships")
                        .HasForeignKey("programid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("owner");

                    b.Navigation("program");
                });

            modelBuilder.Entity("ConnectDellBack.Models.PhasesModel", b =>
                {
                    b.HasOne("ConnectDellBack.Models.EditionModel", "edition")
                        .WithMany("phases")
                        .HasForeignKey("editionid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("edition");
                });

            modelBuilder.Entity("ConnectDellBack.Models.UserModel", b =>
                {
                    b.HasOne("ConnectDellBack.Models.EditionModel", "editionIntern")
                        .WithMany("interns")
                        .HasForeignKey("editionInternid");

                    b.Navigation("editionIntern");
                });

            modelBuilder.Entity("ConnectDellBack.Models.EditionModel", b =>
                {
                    b.Navigation("interns");

                    b.Navigation("memberships");

                    b.Navigation("phases");
                });

            modelBuilder.Entity("ConnectDellBack.Models.ProgramModel", b =>
                {
                    b.Navigation("editions");

                    b.Navigation("news");

                    b.Navigation("ownerships");
                });

            modelBuilder.Entity("ConnectDellBack.Models.UserModel", b =>
                {
                    b.Navigation("listNews");

                    b.Navigation("memberships");

                    b.Navigation("ownerships");
                });
#pragma warning restore 612, 618
        }
    }
}
